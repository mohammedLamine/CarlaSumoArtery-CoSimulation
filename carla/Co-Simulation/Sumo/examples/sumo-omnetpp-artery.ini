[General]
sim-time-limit = 6000s
debug-on-errors = true
print-undisposed = true

cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-interactive = true

**.scalar-recording = false
**.vector-recording = false

network = artery.inet.World

*.traci.core.version = -1
*.traci.launcher.hostname = "127.0.0.1"
*.traci.launcher.port = 8813
*.traci.launcher.sumocfg = "/scenario/carla/maps/Town01.sumocfg"
*.traci.core.setOrder=2
*.traci.core.order=2
# separate random number generator for vehicle penetration rate
num-rngs = 2
*.traci.mapper.rng-0 = 1

*.node[*].middleware.updateInterval = 0.01s
*.node[*].middleware.datetime = "2013-06-01 12:35:00"
*.node[*].middleware.services = xmldoc("services.xml")

[Config veins]
network = artery.veins.World

*.playgroundSizeX = 4000m
*.playgroundSizeY = 4000m
*.playgroundSizeZ = 50m

*.connectionManager.maxInterfDist = 1500m
*.connectionManager.sendDirect = true
*.connectionManager.coreDebug = false

*.withObstacles = true
*.obstacles.obstacles = xmldoc("config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")

*.node[*].nic.mac1609_4.txPower = 126mW
*.node[*].nic.phy80211p.decider = xmldoc("config.xml")
*.node[*].nic.phy80211p.analogueModels = xmldoc("config.xml")

*.node[*].applType = "artery.veins.ApplicationLayer"
*.node[*].appl.middleware.updateInterval = 0.1s
*.node[*].appl.middleware.datetime = "2013-06-01 12:35:00"
*.node[*].appl.middleware.services = xmldoc("services.xml")


[Config inet]
network = artery.inet.World

*.node[*].wlan[*].typename = "VanetNic"
*.node[*].wlan[*].radio.channelNumber = 180
*.node[*].wlan[*].radio.carrierFrequency = 5.9 GHz
*.node[*].wlan[*].radio.transmitter.power = 200 mW

*.node[*].middleware.updateInterval = 0.1s
*.node[*].middleware.datetime = "2013-06-01 12:35:00"
*.node[*].middleware.services = xmldoc("services.xml")


[Config inet_mco]
extends = inet
*.node[*].numRadios = 2
*.node[*].wlan[1].radio.channelNumber = 176
*.node[*].middleware.services = xmldoc("services-mco.xml")
*.node[*].middleware.mcoPolicy = xml("<mco default=\"CCH\"><application id=\"16480\" channel=\"176\" /></mco>")


[Config inet_security]
extends = inet
*.node[*].vanetza[*].security.typename = "SecurityEntity"


[Config inet_multiple_vehicle_types]
extends = inet
# see above for configuration of mapper's random number generator (rng)
seed-1-mt = ${seed=0, 23, 42, 1337, 0815, 4711}
*.traci.mapper.typename = "traci.MultiTypeModuleMapper"
*.traci.mapper.vehicleTypes = xmldoc("vehicles.xml")


[Config inet_nakagami]
extends = inet
*.radioMedium.pathLossType = "VanetNakagamiFading"


[Config envmod]
extends = inet
network = artery.envmod.World
**.identityRegistryModule = "idRegistry"
*.traci.mapper.vehicleType = "artery.envmod.Car"
*.environmentModel.drawObstacles = true
*.environmentModel.drawVehicles = true
*.environmentModel.obstacleTypes = "building shop"
*.environmentModel.traciModule = "traci"
*.environmentModel.nodeMobilityModule = ".mobility"
*.node[*].middleware.services = xmldoc("services-envmod.xml")
*.node[*].environmentModel.sensors = xmldoc("sensors.xml")
*.node[*].environmentModel.*.drawSensorCone = true
*.node[*].environmentModel.*.drawLinesOfSight = true
*.node[*].environmentModel.*.drawDetectedObjects = true
*.node[*].environmentModel.*.drawBlockingObstacles = true

*.node[*].environmentModel.FrontLongRangeRadar.fovRange = 150m
*.node[*].environmentModel.FrontLongRangeRadar.fovAngle = 10

*.node[*].environmentModel.FrontShortRangeRadar.fovRange = 65m
*.node[*].environmentModel.FrontShortRangeRadar.fovAngle = 80
*.node[*].environmentModel.FrontShortRangeRadar.numSegments = 4

*.node[*].environmentModel.RearLongRangeRadar.fovRange = 150m
*.node[*].environmentModel.RearLongRangeRadar.fovAngle = 10

*.node[*].environmentModel.RearShortRangeRadar.fovRange = 65m
*.node[*].environmentModel.RearShortRangeRadar.fovAngle = 80
*.node[*].environmentModel.RearShortRangeRadar.numSegments = 4

*.node[*].environmentModel.SeeThrough.fovRange = 50m


[Config inet_rsu]
extends = inet
*.numRoadSideUnits = 2

*.rsu[*].middleware.datetime = "2013-06-01 12:35:00"
*.rsu[*].middleware.services = xmldoc("services-rsu.xml")
*.rsu[0].**.protectedCommunicationZones = xml("<zones><zone latitude=\"49.576070\" longitude=\"11.015889\" /></zones>")

*.rsu[*].mobility.initialZ = 10m
*.rsu[0].mobility.initialX = 1273.5m
*.rsu[0].mobility.initialY = 1338.0m
*.rsu[1].mobility.initialX = 2000m
*.rsu[1].mobility.initialY = 1000m


[Config veins_rsu]
extends = veins
*.numRoadSideUnits = 2

*.rsu[*].appl.middleware.updateInterval = 0.1s
*.rsu[*].appl.middleware.datetime = "2013-06-01 12:35:00"
*.rsu[*].appl.middleware.services = xmldoc("services-rsu.xml")
*.rsu[0].**.protectedCommunicationZones = xml("<zones><zone latitude=\"49.576070\" longitude=\"11.015889\" /></zones>")

*.rsu[*].nic.mac1609_4.txPower = 126mW
*.rsu[*].nic.phy80211p.decider = xmldoc("config.xml")
*.rsu[*].nic.phy80211p.analogueModels = xmldoc("config.xml")

*.rsu[*].mobility.z = 10
*.rsu[0].mobility.x = 1273.5
*.rsu[0].mobility.y = 1338.0
*.rsu[1].mobility.x = 2000
*.rsu[1].mobility.y = 1000


[Config inet_antenna_offset]
extends = inet

*.node[*].withAntennaMobility = true
*.node[*].antennaMobility.offsetX = -2.5 m


[Config delayed_vehicle_insertion]
description = "insert a bulk of vehicles with individual delays"
extends = inet
*.traci.core.startTime = 120 s
*.traci.nodes.typename = "InsertionDelayNodeManager"


[Config region_of_interest_vehicle_insertion]
description = "Only manage vehicles within defined Regions of Interest (ROI)"
extends = inet
*.traci.nodes.typename = "RegionOfInterestNodeManager"
*.traci.nodes.regionsOfInterest = xmldoc("regions_of_interest.xml")


[Config roi_and_delay_vehicle_insertion]
description =â€¯"insert vehicles within Regions of Interest (ROI) after individual delays"
extends = inet
*.traci.core.startTime = 150 s
*.traci.nodes.typename = "ExtensibleNodeManager"
*.traci.nodes.numVehiclePolicies = 2
*.traci.nodes.vehiclePolicy[0].typename = "RegionOfInterestVehiclePolicy"
*.traci.nodes.vehiclePolicy[0].regionsOfInterest = xmldoc("regions_of_interest.xml")
*.traci.nodes.vehiclePolicy[1].typename = "InsertionDelayVehiclePolicy"
